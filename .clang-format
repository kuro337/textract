# options: https://clang.llvm.org/docs/ClangFormatStyleOptions.html
# clang-format -i <filename> to run in place - and validate Config
BasedOnStyle: LLVM
IndentWidth: 4
ColumnLimit: 120
SpaceAfterCStyleCast: true
UseTab: Never
AlignTrailingComments: true
AlignConsecutiveMacros: Consecutive
AlignConsecutiveBitFields: true
UseCRLF: false
AlignAfterOpenBracket: Align
BinPackArguments: false # false -> if fn call args exceed will be on newlines each
BinPackParameters: false # false -> if params exceed theyll be on newlines each
BreakBeforeBraces: Custom
SpaceBeforeParens: ControlStatements
PointerAlignment: Right
SortIncludes: true
AllowAllConstructorInitializersOnNextLine: false
ConstructorInitializerAllOnOneLineOrOnePerLine: true
AlignConsecutiveAssignments: true
AlignConsecutiveDeclarations: true
AlignOperands: true
SortUsingDeclarations: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: false
SpaceBeforeRangeBasedForLoopColon: false
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
TabWidth: 4
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: None
AllowShortLoopsOnASingleLine: false
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes

AllowAllParametersOfDeclarationOnNextLine: true
AllowAllArgumentsOnNextLine: true
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: Never
  AfterEnum: false
  AfterExternBlock: false
  AfterFunction: false
  AfterNamespace: false
  AfterStruct: false
  AfterUnion: false
  BeforeCatch: false
  BeforeElse: false
  SplitEmptyFunction: true
  SplitEmptyNamespace: true
  SplitEmptyRecord: true
  # IndentBraces: true indents if statements to be non aligned within the body

BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: false
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: true

### Nests Namespaces  namespace Foo { namespace Bar {
CompactNamespaces: true

Cpp11BracedListStyle: true
# LineEnding: LF # line ending style : \n or \r\n
DerivePointerAlignment: false ## analyze for most common alignment of & and * and override PointerAlignment if diff
FixNamespaceComments: true # adds namespace comments such as // naemspace a
IncludeBlocks: Merge # sort and merge imports
IndentCaseLabels: true
IndentPPDirectives: None
IndentWrappedFunctionNames: true
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
NamespaceIndentation: All
PenaltyBreakAssignment: 16
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakString: 64 # sets extra allowed cols before strings are broken onto newlines
# PenaltyExcessCharacter: 0 # sets penalty for chars once exceeding Col Limit
PenaltyReturnTypeOnItsOwnLine: 0
ReflowComments: true
